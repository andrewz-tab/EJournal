// <auto-generated />
using System;
using EJournal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EJournal.Migrations
{
    [DbContext(typeof(JournalDbContext))]
    [Migration("20230604170521_addAdmin")]
    partial class addAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EJournal.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("TypeUserKey")
                        .HasColumnType("int");

                    b.Property<bool>("isActivate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isChanged")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isRequiredChangePassword")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EMail")
                        .IsUnique();

                    b.HasIndex("TypeUserKey");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            EMail = "qwerty@mail.com",
                            Login = "admin",
                            Password = "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
                            TypeUserKey = 2,
                            isActivate = true,
                            isChanged = false,
                            isRequiredChangePassword = false
                        });
                });

            modelBuilder.Entity("EJournal.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeKey")
                        .HasColumnType("int");

                    b.Property<string>("Liter")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeKey");

                    b.HasIndex("Number", "Liter")
                        .IsUnique();

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("EJournal.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassKey")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeKey")
                        .HasColumnType("int");

                    b.Property<int>("SubjectKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassKey");

                    b.HasIndex("EmployeeKey");

                    b.HasIndex("SubjectKey", "EmployeeKey", "ClassKey")
                        .IsUnique();

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("EJournal.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountKey")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AccountKey")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            AccountKey = 101
                        });
                });

            modelBuilder.Entity("EJournal.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisciplineKey")
                        .HasColumnType("int");

                    b.Property<string>("HomeWork")
                        .HasColumnType("longtext");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineKey");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("EJournal.Models.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Decription")
                        .HasColumnType("longtext");

                    b.Property<int>("LessonKey")
                        .HasColumnType("int");

                    b.Property<int>("StudentKey")
                        .HasColumnType("int");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonKey");

                    b.HasIndex("StudentKey");

                    b.ToTable("Marks", t =>
                        {
                            t.HasCheckConstraint("Value", "Value >= -1 AND Value <= 5");
                        });
                });

            modelBuilder.Entity("EJournal.Models.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountKey")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PassId")
                        .HasColumnType("longtext");

                    b.Property<string>("SNILS")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountKey")
                        .IsUnique();

                    b.HasIndex("SNILS")
                        .IsUnique();

                    b.ToTable("PersonalDatas");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            AccountKey = 101,
                            DateBirth = new DateTime(2002, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Хузахметов Андрей Александрович",
                            SNILS = "12345678901",
                            gender = 0
                        });
                });

            modelBuilder.Entity("EJournal.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Учитель"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Завуч"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Администратор"
                        });
                });

            modelBuilder.Entity("EJournal.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountKey")
                        .HasColumnType("int");

                    b.Property<int>("ClassKey")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AccountKey")
                        .IsUnique();

                    b.HasIndex("ClassKey");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EJournal.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EJournal.Models.TypeUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TypeUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ученик"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Сотрудник"
                        });
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("EmployeeRole", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeesId = 101,
                            RolesId = 3
                        });
                });

            modelBuilder.Entity("EJournal.Models.Account", b =>
                {
                    b.HasOne("EJournal.Models.TypeUser", "TypeUser")
                        .WithMany("Accounts")
                        .HasForeignKey("TypeUserKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeUser");
                });

            modelBuilder.Entity("EJournal.Models.Class", b =>
                {
                    b.HasOne("EJournal.Models.Employee", "Employee")
                        .WithMany("Classes")
                        .HasForeignKey("EmployeeKey")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EJournal.Models.Discipline", b =>
                {
                    b.HasOne("EJournal.Models.Class", "Class")
                        .WithMany("Disciplines")
                        .HasForeignKey("ClassKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EJournal.Models.Employee", "Employee")
                        .WithMany("Disciplines")
                        .HasForeignKey("EmployeeKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EJournal.Models.Subject", "Subject")
                        .WithMany("Disciplines")
                        .HasForeignKey("SubjectKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Employee");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EJournal.Models.Employee", b =>
                {
                    b.HasOne("EJournal.Models.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("EJournal.Models.Employee", "AccountKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("EJournal.Models.Lesson", b =>
                {
                    b.HasOne("EJournal.Models.Discipline", "Discipline")
                        .WithMany("Lessons")
                        .HasForeignKey("DisciplineKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");
                });

            modelBuilder.Entity("EJournal.Models.Mark", b =>
                {
                    b.HasOne("EJournal.Models.Lesson", "Lesson")
                        .WithMany("Marks")
                        .HasForeignKey("LessonKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EJournal.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EJournal.Models.PersonalData", b =>
                {
                    b.HasOne("EJournal.Models.Account", "Account")
                        .WithOne("PersonalData")
                        .HasForeignKey("EJournal.Models.PersonalData", "AccountKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("EJournal.Models.Student", b =>
                {
                    b.HasOne("EJournal.Models.Account", "Account")
                        .WithOne("Student")
                        .HasForeignKey("EJournal.Models.Student", "AccountKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EJournal.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.HasOne("EJournal.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EJournal.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EJournal.Models.Account", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("PersonalData")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EJournal.Models.Class", b =>
                {
                    b.Navigation("Disciplines");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EJournal.Models.Discipline", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("EJournal.Models.Employee", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("EJournal.Models.Lesson", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("EJournal.Models.Student", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("EJournal.Models.Subject", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("EJournal.Models.TypeUser", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
