@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor
@model EJournal.Models.ViewModels.DisciplineViewModels.DetailsDisciplineViewModel

@{
    ViewData["Title"] = "Данные о дисциплине";
}

<h1>@ViewData["Title"]</h1>

@if (HttpContextAccessor?.HttpContext?.User?.Identity?.IsAuthenticated ?? false)
{
    var user = HttpContextAccessor.HttpContext.User;

    if (user.HasClaim(claim => (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)) ||
    (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeId.ToString()) || (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeClassManagerId.ToString())))
    {
        <div>
            
            @if (user.HasClaim(claim => (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole))))
            {
                <a asp-action="Index" class="btn btn-primary our-link">Вернуться к списку</a>

                <a asp-action="Upsert" asp-route-id="@Model.Id" class="btn btn-primary our-link">Обновить даныне</a>
            }
        </div>
        <hr />

        <div class="row">
            <div class="col-md-4">

                <input asp-for="Id" hidden />

                <dt >
                    @Html.DisplayNameFor(model => model.SubjectName)
                </dt>
                <dd >
                    @Html.DisplayFor(model => model.SubjectName)
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.ClassName)
                </dt>
                <dd >
                    @Html.DisplayFor(model => model.ClassName)
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </dt>
                <dd >
                     <a asp-controller="Employees" asp-action="Details" asp-route-id="@Model.EmployeeId">
                    @Html.DisplayFor(model => model.EmployeeName)
                    </a>
                </dd>


            </div>
        </div>
        <style type="text/css">

            body {
                position: relative;
            }

            .scrollable {
                overflow-x: scroll;
                overflow-y: visible;
            }

        </style>

        <script src="https://code.jquery.com/jquery-2.2.3.min.js"></script>
        <hr />
        <h4>Оценки</h4>
        <p></p>
        @if (Model.studentMarks == null || Model.lessons == null)
        {
            <dt class="col-sm-2">
                Оценки отсутсвуют
            </dt>
        }
        else
        {
            <div class="scrollable">
                <table id="table1" class="table-light table-striped table-hover table-bordered tablecolor align-middle">
                    <thead>
                        <tr>
                            <th>
                                Ученики
                            </th>
                            <th>
                                Сред. оценка
                            </th>
                            @foreach (var date in Model.lessons)
                            {
                                <th>
                                    <a asp-controller="Lessons" asp-action="Details" asp-route-id="@date.Value">
                                        @date.Text
                                    </a>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var student in Model.studentMarks)
                        {
                            <tr>
                                <td>
                                    @if (user.HasClaim(claim => (claim.Type == WC.TypeUser && claim.Value == WC.EmployeeUser)))
                                    {
                                        <a asp-controller="Students" asp-action="Details" asp-route-id="@student.Key.Value">
                                            @student.Key.Text
                                        </a>
                                    }
                                    else
                                    {
                                        @student.Key.Text
                                    }
                                </td>
                                <td>
                                    @{
                                        double sred = 0; int count = 0;
                                        foreach (var mark in student.Value)
                                        {
                                            @if (mark > 0 && mark <= 5)
                                            {
                                                sred += mark;
                                                count++;
                                            }
                                        }
                                        @if (count > 0)
                                        {
                                            @(
                                            sred / count
                                                )
                                        }
                                    }
                                </td>

                                @foreach (var mark in student.Value)
                                {
                                    <td>
                                        @WC.TranslateToMark(mark)
                                    </td>
                                }

                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        }
    }

}