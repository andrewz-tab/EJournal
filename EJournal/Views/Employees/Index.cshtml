@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<EJournal.Models.Employee>

@{
    ViewData["Title"] = "Cписок сотрудников";
}

<h1>@ViewData["Title"]</h1>

@if (HttpContextAccessor?.HttpContext?.User?.Identity?.IsAuthenticated ?? false)
{
    var user = HttpContextAccessor.HttpContext.User;

    @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
    {
<p>
            <a asp-action="Upsert" class="btn btn-primary our-link">Добавить сотрудника</a>
</p>
    }
    <table id="table1" class="table table-light table-striped table-hover table-bordered align-middle">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Account.PersonalData.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Account.EMail)
            </th>
                @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Account.PhoneNumber)
            </th>
                }
                @if(!(user.FindFirst(WC.TypeUser)?.Value == WC.StudentUser))
                {
            <th>
                @Html.DisplayNameFor(model => model.Roles)
            </th>
                }
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
                bool isStudent = user.FindFirst(WC.TypeUser)?.Value == WC.StudentUser && item.Roles.Any(r => r.Name == WC.AdminRole) && item.Roles.Count() == 1;

                if (!(isStudent))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Account.PersonalData.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Account.EMail)
                        </td>
                        @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Account.PhoneNumber)
                            </td>
                        }
                        @if (!(user.FindFirst(WC.TypeUser)?.Value == WC.StudentUser))
                        {
                            <td>
                                @foreach (var role in item.Roles)
                                {
                                    <p>@role.Name</p>
                                }
                        </td>
                        }
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id" class="nav-link custom-btn btn-7">Подробнее</a>
                            @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
                            {
                                <text> | </text>
                                <a asp-action="Upsert" asp-route-id="@item.Id" class="nav-link custom-btn btn-3">Изменить</a>
                                <text> | </text>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="nav-link custom-btn btn-5">Удалить</a>
                            }

                        </td>
                    </tr>
                }
            }
    </tbody>
</table>
}