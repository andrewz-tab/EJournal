@model EJournal.Models.ViewModels.EmployeeViewModels.DetailsEmloyeeViewModel

@{
    ViewData["Title"] = "Данные о сотруднике";
    @if (Model.gender == PersonalData.Gender.Women)
    {
        ViewData["gender"] = "Женский";
    }
    else
    {
        ViewData["gender"] = "Мужской";
    }
}

<h1>@ViewData["Title"]</h1>

<h4>Class</h4>
<div>
    <a asp-action="Index">Вернуться к списку</a> <a asp-action="Upsert" asp-route-id="@Model.Id">Обновить даныне</a>
</div>
<hr />

<div class="row">
    <div class="col-md-4">
        
        <input asp-for="Id" hidden />
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateBirth)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.gender)
        </dt>
        <dd class="col-sm-10">
            @ViewData["gender"] <br />
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PassId)
        </dt>
        <dd class="col-sm-10">
            @if (Model.PassId == null)
            {
                <span>Данные отсутсвуют</span>                
            }
            @Html.DisplayFor(model => model.PassId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SNILS)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SNILS)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EMail)
        </dt>
        <dd class="col-sm-10">
            @if (Model.EMail == null)
            {
                <span>Данные отсутсвуют</span>
            }
            @Html.DisplayFor(model => model.EMail)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @if (Model.PhoneNumber == null)
            {
                <span>Данные отсутсвуют</span>
            }
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Description == null)
            {
                <span>Данные отсутсвуют</span>
            }
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.roles)
        </dt>
        <dd class="col-sm-10">
            @if (Model.roles == null)
            {
                <span>Данных нет</span>
            }
            @foreach (var role in Model.roles)
            {
                <span>@role.Name</span>
                <br />
            }
        </dd>
        
    </div>
</div>


    <hr />
<h4>Классы</h4>
<a asp-controller="Classes" asp-action="Upsert">Добавить класс</a>
@if (Model.classes.Count() != 0)
{
    await Html.RenderPartialAsync("EmployeesClass", Model.classes);
}
else
{
    <dt class="col-sm-2">
        Классы отсутсвуют
    </dt>
}
    <hr />
    <h4>Дисциплины</h4>
<a asp-controller="Classes" asp-action="Upsert">Добавить дисциплину</a>
@if (Model.disciplines.Count() != 0)
{
    await Html.RenderPartialAsync("EmployeesDiscipline", Model.disciplines);
}
else
{
    <dt class="col-sm-2">
        Дисциплины отсутсвуют
    </dt>
}