@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Html;
@model EJournal.Models.ViewModels.StudentViewModels.DetailsStudentViewModel

@{
    ViewData["Title"] = "Данные об ученике ";
    @if (Model.gender == PersonalData.Gender.Women)
    {
        ViewData["gender"] = "Женский";
    }
    else
    {
        ViewData["gender"] = "Мужской";
    }
}

<h1>@ViewData["Title"]</h1>
@if (HttpContextAccessor?.HttpContext?.User?.Identity?.IsAuthenticated ?? false)
{
    var user = HttpContextAccessor.HttpContext.User;

    @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
    {
        <div>
            <a asp-action="Index" class="btn btn-primary our-link">Вернуться к списку</a> 
            <a asp-action="Upsert" asp-route-id="@Model.Id" class="btn btn-primary our-link">Обновить даныне</a>
        </div>
    }

    <hr />

    <div class="row">
        <div class="col-md-4">
            @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
            {
            @if (!Model.isActivate)
            {
                    <a asp-controller="Login" asp-action="ActivateAccount" asp-route-accountId="@Model.accountId" class="btn btn-primary our-link">Активировать аккаунт</a>
            }
            }
            <input asp-for="ClassKey" hidden />
            <input asp-for="Id" hidden />
            <dt >
                @Html.DisplayNameFor(model => model.FullName)
            </dt>
            <dd >
                @Html.DisplayFor(model => model.FullName)
            </dd>
            <dt >
                @Html.DisplayNameFor(model => model.ClassName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ClassName)
            </dd>
            <dt >
                @Html.DisplayNameFor(model => model.EMail)
            </dt>
            <dd>
                @if (Model.EMail == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.EMail)
            </dd>
            <dt >
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd >
                @if (Model.Description == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.Description)
            </dd>


            @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole) ||
           (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeClassManagerId.ToString())))
            {
                <dt >
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </dt>
                <dd >
                    @if (Model.PhoneNumber == null)
                    {
                        <span>Данные отсутсвуют</span>
                    }
                    @Html.DisplayFor(model => model.PhoneNumber)
                </dd>

                <dt >
                    @Html.DisplayNameFor(model => model.DateBirth)
                </dt>
                <dd >
                    @(Model.DateBirth.ToString("dd.MM.yyyy"))
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.gender)
                </dt>
                <dd >
                    @ViewData["gender"] <br />
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.PassId)
                </dt>
                <dd >
                    @if (Model.PassId == null)
                    {
                        <span>Данные отсутсвуют</span>
                    }
                    @Html.DisplayFor(model => model.PassId)
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.SNILS)
                </dt>
                <dd >
                    @Html.DisplayFor(model => model.SNILS)
            </dd>
            }
            

        </div>
    </div>
    @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole) ||
                        (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeClassManagerId.ToString())))
    {
        <style type="text/css">

            .withour-under-line {
                text-decoration: none;
            }

            .scrollable {
                overflow-x: scroll;
                overflow-y: visible;
            }

        </style>
        <hr />
        <h4>Дисциплины</h4>
        @if (user.HasClaim(claim => claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)))
        {
            <a asp-controller="Disciplines" asp-action="Upsert" asp-route-classId="@Model.ClassKey" class="btn btn-primary our-link">Добавить дисциплину</a>
            <p></p>
        }
        @if (Model.disciplines.Count() != 0)
        {
            @foreach (var item in Model.disciplines)
            {
                <h4>
                    <a asp-controller="Disciplines" asp-action="Details" asp-route-id="@item.Id" class="withour-under-line">
                        @Html.DisplayFor(modelItem => item.Subject.Name)
                    </a>
                </h4>
                <h6>
                    <a asp-controller="Employees" asp-action="Details" asp-route-id="@item.EmployeeKey" class="withour-under-line">
                        @Html.DisplayFor(modelItem => item.Employee.Account.PersonalData.FullName)
                    </a>
                </h6>
                Dictionary<DateTime, int?> DateMark = new Dictionary<DateTime, int?>();
                if(item.Lessons.Count() == 0)
                {
                    <text>Отсутствуют занятия</text>
                }
                <div class="scrollable">
                    <table id="table1" class="table-light table-striped table-hover table-bordered tablecolor align-middle">
                        @{
                            double sum = 0;
                            int count = 0;
                            <thead>
                            <tr>
                            <th>Сред. балл</th>
                                @foreach (var lesson in item.Lessons.OrderByDescending(l => l.DateTime))
                                {
                                <th>
                                    <a asp-controller="Lessons" asp-action="Details" asp-route-id="@lesson.Id" class="withour-under-line">
                                            @(
                                            new @HtmlString(@lesson.DateTime.ToString("ddd,<br> dd.MM"))
                                                )
                                                @{
                                                    if (lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id)?.Value > 0 && lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id)?.Value <= 5)
                                                    {
                                                        sum += (int)lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id).Value;
                                                        count++;
                                                    }
                                                }
                                    </a>
                                </th>
                                }
                            </tr>
                            </thead>

                            <tbody>
                            <tr>
                            <td>@(count != 0 ? (sum/count).ToString("F2") : " ")</td>
                                @foreach (var lesson in item.Lessons.OrderByDescending(l => l.DateTime))
                                {

                                <td>
                                        @(
                                        @WC.TranslateToMark(lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id)?.Value)
                                            )
                                </td>

                                }
                                </tr>
                            </tbody>
                    }
                </table>
                </div>
            }
        }
        else
        {
            <dt class="col-sm-2">
                Дисциплины отсутсвуют
            </dt>
        }
    }
}