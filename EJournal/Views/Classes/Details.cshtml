@model EJournal.Models.ViewModels.ClassViewModels.DetailsClassViewModel

@{
    ViewData["Title"] = "Данные о классе";
}

<h1>@ViewData["Title"]</h1>

<h4>Class</h4>
<div>
    <a asp-action="Index">Вернуться к списку</a> <a asp-action="Upsert" asp-route-id="@Model.Id">Обновить даныне</a>
</div>
<hr />

<div class="row">
    <div class="col-md-4">

        <input asp-for="Id" hidden />
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmployeeName)
        </dt>
        <dd class="col-sm-10">
            <a asp-controller="Employees" asp-action="Details" asp-route-id="@Model.EmployeeKey">
            @Html.DisplayFor(model => model.EmployeeName)
            </a>
        </dd>

    </div>
</div>


<hr />
<h4>Ученики класса</h4>
<a asp-controller="Students" asp-action="Upsert" asp-route-classId="@Model.Id">Добавить ученика</a>
@if (Model.students.Count() != 0)
{
    await Html.RenderPartialAsync("ClassesStudent", Model.students);
}
else
{
    <dt class="col-sm-2">
        Учащиеся отсутсвуют
    </dt>
}
<hr />
<h4>Дисциплины</h4>
<a asp-controller="Disciplines" asp-action="Upsert" asp-route-classId="@Model.Id">Добавить дисциплину</a>
@if (Model.disciplines.Count() != 0)
{
    await Html.RenderPartialAsync("ClassesDiscipline", Model.disciplines);
}
else
{
    <dt class="col-sm-2">
        Дисциплины отсутсвуют
    </dt>
}