@using Microsoft.AspNetCore.Html;
@model EJournal.Models.ViewModels.ProfileViewModels.ProfileViewModel

@{
    ViewData["Title"] = "Профиль";
    @if (Model.gender == PersonalData.Gender.Women)
    {
        ViewData["gender"] = "Женский";
    }
    else
    {
        ViewData["gender"] = "Мужской";
    }
}
<h1>@ViewData["Title"]</h1>
@if(ViewData["Error"] != null)
{
    <h3>@ViewData["Error"]</h3>
}
else
{

        <a asp-controller="Login" asp-action="ChangePassword" class="btn btn-primary our-link">Сменить пароль</a>
    <a asp-controller="Login" asp-action="Logout" class="btn btn-primary our-link">Выйти</a>
    
}
<hr />

@if(Model.isStudent && ViewData["Error"] == null)
{
    <div class="row">
        <div class="col-md-4">
            <input asp-for="Id" hidden />
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.FullName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FullName)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ClassName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ClassName)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.DateBirth)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DateBirth)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.gender)
            </dt>
            <dd class="col-sm-10">
                @ViewData["gender"] <br />
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.PassId)
            </dt>
            <dd class="col-sm-10">
                @if (Model.PassId == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.PassId)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SNILS)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SNILS)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.EMail)
            </dt>
            <dd class="col-sm-10">
                @if (Model.EMail == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.EMail)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </dt>
            <dd class="col-sm-10">
                @if (Model.PhoneNumber == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.PhoneNumber)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @if (Model.Description == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.Description)
            </dd>
        </div>
    </div>
    <hr />
    <style type="text/css">

        .withour-under-line {
            text-decoration: none;
        }

        .scrollable {
            overflow-x: scroll;
            overflow-y: visible;
        }

    </style>
    <h4>Дисциплины</h4>
    @if (Model.disciplines.Count() != 0)
    {
        @foreach (var item in Model.disciplines)
        {
            <h4>
                   @Html.DisplayFor(modelItem => item.Subject.Name)
                
            </h4>
            <h6>
                <a asp-controller="Employees" asp-action="Details" asp-route-id="@item.EmployeeKey">
                    @Html.DisplayFor(modelItem => item.Employee.Account.PersonalData.FullName)
                </a>
            </h6>
            Dictionary<DateTime, int?> DateMark = new Dictionary<DateTime, int?>();
            if (item.Lessons.Count() == 0)
            {
                <text>Отсутствуют занятия</text>
            }
            <div class="scrollable">
                <table id="table1" class="table-light table-striped table-hover table-bordered tablecolor align-middle">
                    @{
                        double sum = 0;
                        int count = 0;
                        <thead>
                            <tr>
                                <th>Сред. балл</th>
                                @foreach (var lesson in item.Lessons.OrderByDescending(l => l.DateTime))
                                {
                                    <th>
                                        <a asp-controller="Lessons" asp-action="Details" asp-route-id="@lesson.Id" class="withour-under-line">
                                            @(
                                            new @HtmlString(@lesson.DateTime.ToString("ddd,<br> dd.MM"))
                                                )
                                            @{
                                                if (lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id)?.Value > 0 && lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id)?.Value <= 5)
                                                {
                                                    sum += (int)lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id).Value;
                                                    count++;
                                                }
                                            }
                                        </a>
                                    </th>
                                }
                            </tr>
                        </thead>

                        <tbody>
                            <tr>
                                <td>@(count != 0 ? (sum / count).ToString("F2") : " ")</td>
                                @foreach (var lesson in item.Lessons.OrderByDescending(l => l.DateTime))
                                {

                                    <td>
                                        @(
                                        @WC.TranslateToMark(lesson.Marks.FirstOrDefault(m => m.StudentKey == Model.Id)?.Value)
                                            )
                                    </td>

                                }
                            </tr>
                        </tbody>
                    }
                </table>
            </div>
        }
    }
    else
    {
        <dt class="col-sm-2">
            Дисциплины отсутсвуют
        </dt>
    }
}
else if (ViewData["Error"] == null)
{
    <div class="row">
        <div class="col-md-4">
            <input asp-for="Id" hidden />
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.FullName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FullName)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.DateBirth)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DateBirth)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.gender)
            </dt>
            <dd class="col-sm-10">
                @ViewData["gender"] <br />
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.PassId)
            </dt>
            <dd class="col-sm-10">
                @if (Model.PassId == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.PassId)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SNILS)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SNILS)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.EMail)
            </dt>
            <dd class="col-sm-10">
                @if (Model.EMail == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.EMail)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </dt>
            <dd class="col-sm-10">
                @if (Model.PhoneNumber == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.PhoneNumber)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @if (Model.Description == null)
                {
                    <span>Данные отсутсвуют</span>
                }
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.roles)
            </dt>
            <dd class="col-sm-10">
                @if (Model.roles == null)
                {
                    <span>Данных нет</span>
                }
                @foreach (var role in Model.roles)
                {
                    <span>@role.Name</span>
                    <br />
                }
            </dd>
        </div>
    </div>
    
    @if (Model.roles.Any(r => r.Name == WC.TeacherRole || r.Name == WC.HeadTeacherRole))
    {
        <hr />
        <h4>Классы</h4>
        @if (Model.classes.Count() != 0)
        {
            await Html.RenderPartialAsync("EmployeesClass", Model.classes);
        }
        else
        {
            <dt class="col-sm-4">
                Классы отсутсвуют
            </dt>
        }
        <hr />
        <h4>Дисциплины</h4>
        @if (Model.disciplines.Count() != 0)
        {
            await Html.RenderPartialAsync("EmployeesDiscipline", Model.disciplines);
        }
        else
        {
            <dt class="col-sm-4">
                Дисциплины отсутсвуют
            </dt>
        }

    }
}
