@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor
@model EJournal.Models.ViewModels.LessonViewModel.DetailsLessonViewModel

@if (HttpContextAccessor?.HttpContext?.User?.Identity?.IsAuthenticated ?? false)
{
    var user = HttpContextAccessor.HttpContext.User;

    @if (user.HasClaim(claim =>
   (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)) ||
   (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeId.ToString()) ||
   (claim.Type == WC.ClassId && claim.Value == Model.ClassId.ToString()) ||
   (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeClassManagerId.ToString()))
   )
    { 

        ViewData["Title"] = "Занятие по предмету \"" + Model.SubjectName + "\"";


        <h1>@ViewData["Title"]</h1>


            if (user.HasClaim(claim => (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)) ||
    (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeId.ToString()) || (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeClassManagerId.ToString())))
            {
            <p>
                <a asp-action="Details" asp-controller="Disciplines" asp-route-id="@Model.DisciplineId" class="btn btn-primary our-link">Перейти к информации о дисциплине</a>
            </p>
        }

        <div class="row">
            <div class="col-md-4">
                <input asp-for="Id" hidden />
                <dt>
                    @Html.DisplayNameFor(model => model.SubjectName)
                </dt>
                <dd >
                    @Html.DisplayFor(model => model.SubjectName)
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.ClassName)
                </dt>
                <dd >
                    @Html.DisplayFor(model => model.ClassName)
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </dt>
                <dd >
                    @Html.DisplayFor(model => model.EmployeeName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.HomeWork)
                </dt>
                @if (Model.HomeWork == null)
                {
                    <dd >
                        Отсутсвует
                    </dd>
                }
                else
                {
                    <dd >
                        @Html.DisplayFor(model => model.HomeWork)
                    </dd>
                }
                <dt >
                    @Html.DisplayNameFor(model => model.date)
                </dt>
                <dd >
                    @(Model.date.ToString("dd.MM.yyyy"))
                </dd>
                <dt >
                    @Html.DisplayNameFor(model => model.index)
                </dt>
                <dd >
                    @(Model.index + 1)
                </dd>
            </div>
        </div>
        <hr />
        if (user.HasClaim(claim => (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole)) ||
                                                (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeId.ToString()) || (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeClassManagerId.ToString())))
        {

            <h4>Оценки</h4>

            @if (Model.studentIDName == null)
            {
                <dt >
                    Ученики отсутвуют
                </dt>
            }
            else
            {
                <table id="table1" class="table-light table-striped table-hover table-bordered tablecolor align-middle">
                    <thead>
                        <tr>
                            <th>
                                Ученики
                            </th>
                            <th>
                                Оценки
                            </th>
                            <th>
                                Примечание
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model.studentIDName)
                        {

                            <tr>
                                <td>
                                    @if (user.HasClaim(claim => (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole || claim.Value == WC.HeadTeacherRole))))
                                    {
                                        <a asp-controller="Students" asp-action="Details" asp-route-id="@student.Key">
                                            @student.Value
                                        </a>
                                    }
                                    else
                                    {
                                        @student.Value
                                    }
                                </td>
                                <td>
                                    @{
                                        int mark = 0;

                                        if (Model.studentIDMark.TryGetValue(student.Key, out mark))
                                        {
                                            @WC.TranslateToMark(mark)
                                        }
                                    }
                                </td>
                                <td>
                                    @Model.studentIDDecription[student.Key]
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            }
            <p></p>
            if (user.HasClaim(claim => (claim.Type == ClaimTypes.Role && (claim.Value == WC.AdminRole)) ||
        (claim.Type == WC.EmployeeId && claim.Value == Model.EmployeeId.ToString())))
            {
                <p>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary our-link">Редактировать оценки и домашее занятие</a>
                </p>
            }

        }
        else
        {
            <h4>Оценка</h4>
            int studentId;
            if (int.TryParse(user.FindFirst(WC.StudentId)?.Value, out studentId))
            {


                @if (Model.studentIDName == null)
                {

                    <dt>
                        Информация отсутсвует
                    </dt>
                }
                else if (!Model.studentIDName.ContainsKey(studentId))
                {
                    <dt >
                        Информация отсутсвует
                    </dt>
                }
                else
                {
                    <table id="table1" class="table-light table-striped table-hover table-bordered tablecolor align-middle">
                        <thead>
                            <tr>
                                <th>
                                    Ученик
                                </th>
                                <th>
                                    Оценка
                                </th>
                                <th>
                                    Примечание
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in Model.studentIDName)
                            {
                                if (user.HasClaim(claim => (claim.Type == WC.StudentId && claim.Value == student.Key.ToString())))
                                {
                                    <tr>
                                        <td>
                                                @student.Value
                                        </td>
                                        <td>
                                            @{
                                                int mark = 0;

                                                if (Model.studentIDMark.TryGetValue(student.Key, out mark))
                                                {
                                                    @WC.TranslateToMark(mark)
                                                }
                                            }
                                        </td>
                                        <td>
                                            @Model.studentIDDecription[student.Key]
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>

                    </table>
                }
            }
            else
            {
                <dt>
                    Информация отсутсвует
                </dt>
            }
        }
    }
}